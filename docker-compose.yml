# FILE: ./docker-compose.yml

networks:
  robopost_network:
    driver: bridge

volumes:
  mysql_data:
  rabbitmq_data:

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file: .env
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - robopost_network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    env_file: .env
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - robopost_network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  management-api:
    build:
      context: ./services/management-api
      dockerfile: Dockerfile
    container_name: management-api
    env_file: .env
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./services/management-api:/usr/src/app
      - ./common:/usr/src/app/common
    networks:
      - robopost_network
    depends_on:
      mysql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  fetcher-service:
    build:
      context: ./services/fetcher-service
      dockerfile: Dockerfile
    container_name: fetcher-service
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./services/fetcher-service/app:/usr/src/app/app
      - ./common:/usr/src/app/common
    # --- START: این بخش مشکل را حل می‌کند ---
    environment:
      - PYTHONPATH=/usr/src/app
    # --- END: بخش اضافه شده ---
    networks:
      - robopost_network
    depends_on:
      - management-api

  publisher-service:
    build:
      context: ./services/publisher-service
      dockerfile: Dockerfile
    container_name: publisher-service
    env_file: .env
    restart: unless-stopped
    volumes:
      - ./services/publisher-service/app:/usr/src/app/app
      - ./common:/usr/src/app/common
    # --- START: این بخش مشکل را حل می‌کند ---
    environment:
      - PYTHONPATH=/usr/src/app
    # --- END: بخش اضافه شده ---
    networks:
      - robopost_network
    depends_on:
      - management-api
      - rabbitmq