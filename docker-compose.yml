# FILE: ./docker-compose.yml

networks:
  robopost_network:
    driver: bridge

volumes:
  mysql_data:
  rabbitmq_data:

services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - robopost_network
    healthcheck:
      # این دستور به طور دقیق سلامت پایگاه داده را بررسی می‌کند
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u${MYSQL_USER}", "-p${MYSQL_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rabbitmq:
    image: rabbitmq:3.11-management-alpine
    container_name: rabbitmq
    restart: unless-stopped
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    networks:
      - robopost_network

  management-api:
    build:
      context: ./services/management-api
      dockerfile: Dockerfile
    container_name: management-api
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./services/management-api:/usr/src/app
      - ./common:/usr/src/app/common
    networks:
      - robopost_network
    depends_on:
      mysql:
        condition: service_healthy # همچنان برای ترتیب‌دهی اولیه مفید است
      rabbitmq:
        condition: service_started
    # --- START: اسکریپت انتظار برای اطمینان از آمادگی کامل سرویس‌ها ---
    command: >
      sh -c "
        echo '--- Waiting for MySQL to be ready... ---';
        python -c 'import socket; import time;
        while True:
            try:
                with socket.create_connection((\"mysql\", 3306), timeout=2):
                    break
            except OSError:
                time.sleep(2)';
        
        echo '✅ MySQL is ready. Starting RoboPost API...';
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "
    # --- END: اسکریپت انتظار ---